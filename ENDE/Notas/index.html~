<!DOCTYPE html>
<html lang="es">
<head>
<!-- 2022-04-01 Fri 18:17 -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>ENDE - Notas</title>
<meta name="author" content="Alberto Robles Gomez" />
<meta name="generator" content="Org Mode" />
<link rel="stylesheet" type="text/css" href="../../css/index.css" />
</head>
<body>
<div id="content" class="content">
<header>
<h1 class="title">ENDE - Notas</h1>
</header><nav id="table-of-contents" role="doc-toc">
<h2>&Iacute;ndice</h2>
<div id="text-table-of-contents" role="doc-toc">
<ul>
<li><a href="#orgd578748">TEMA 1</a>
<ul>
<li><a href="#org72aea43">Conceptos de software, programa y aplicacion.</a>
<ul>
<li><a href="#orgb208534">Software</a></li>
<li><a href="#org967bb94">Programa</a></li>
<li><a href="#org8e892cb">Aplicacion</a></li>
<li><a href="#orgafdab79">Suite o Paquete Integrado</a></li>
</ul>
</li>
<li><a href="#orgb7a44cd">Lenguajes de programacion</a>
<ul>
<li><a href="#org9fc94f4">Componentes</a></li>
<li><a href="#org0f293e1">Criterios para establecer las clasificaciones</a></li>
<li><a href="#org5ff8f80">Obtener codigo ejecutable</a></li>
</ul>
</li>
<li><a href="#org4ec1d0e">Maquinas Virtuales</a>
<ul>
<li><a href="#orga8d6c5c">Categorias</a></li>
<li><a href="#org28bc308">La maquina virtual de Java</a></li>
</ul>
</li>
<li><a href="#org62e7eff">Lenguajes mas difundidos. Caracteristicas.</a>
<ul>
<li><a href="#org297c5f6">Java</a></li>
<li><a href="#orgbc91c03">Python</a></li>
<li><a href="#org12f217c">C y C++</a></li>
<li><a href="#org414bd29">JavaScript</a></li>
<li><a href="#org78d7972">PHP</a></li>
<li><a href="#org9998ba0">VB.NET</a></li>
</ul>
</li>
<li><a href="#org1d71f43">Desarrollo de una aplicacion</a>
<ul>
<li><a href="#orgc338100">Fases</a></li>
<li><a href="#org69c447f">Roles en el desarrollo de software</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#org4d5cdb1">TEMA 2</a></li>
</ul>
</div>
</nav>

<div id="outline-container-orgd578748" class="outline-2">
<h2 id="orgd578748">TEMA 1</h2>
<div class="outline-text-2" id="text-orgd578748">
</div>
<div id="outline-container-org72aea43" class="outline-3">
<h3 id="org72aea43">Conceptos de software, programa y aplicacion.</h3>
<div class="outline-text-3" id="text-org72aea43">
</div>
<div id="outline-container-orgb208534" class="outline-4">
<h4 id="orgb208534">Software</h4>
<div class="outline-text-4" id="text-orgb208534">
<ul class="org-ul">
<li>Tambien denominado componente logico.</li>
<li>Es intangible, a diferencia del hardware que es tangible.</li>
<li>Realiza una tarea determinada.</li>
<li>Se comunica con el hardware para llevar a cabo su tarea.</li>
<li>Se desarrolla, no se fabrica.</li>
<li>Incluye los datos utilizados por los programas.</li>
<li>Puede ser a medida o enlatado.</li>
</ul>
</div>

<div id="outline-container-org6b26449" class="outline-5">
<h5 id="org6b26449">Categorias</h5>
<div class="outline-text-5" id="text-org6b26449">
</div>
<div id="outline-container-org8ca0921" class="outline-6">
<h6 id="org8ca0921">Segun el tipo de tarea que realiza</h6>
<div class="outline-text-6" id="text-org8ca0921">
</div>
<div id="outline-container-org74b5adc" class="outline-7">
<h7 id="org74b5adc">De sistema</h7>
<div class="outline-text-7" id="text-org74b5adc">
<ul class="org-ul">
<li>Hace que funcione el HW.</li>
<li>Administra los recursos HW.</li>
<li>Intermediario: Humano - HW.</li>
<li>Ejemplo: SS. OO., Controladores (driver)</li>
</ul>
</div>
</div>

<div id="outline-container-orgd9a2246" class="outline-7">
<h7 id="orgd9a2246">De aplicacion</h7>
<div class="outline-text-7" id="text-orgd9a2246">
<ul class="org-ul">
<li>Nos ayudan a realizar tareas especificas -&gt; automatizan.</li>
<li>Ejemplo: CAD, SW medico, contabilidad, ofimatica, &#x2026;</li>
</ul>
</div>
</div>

<div id="outline-container-org6d7581d" class="outline-7">
<h7 id="org6d7581d">De programacion o Desarrollo</h7>
<div class="outline-text-7" id="text-org6d7581d">
<ul class="org-ul">
<li>Proporciona herramientas al progamador.</li>
<li>Suelen contar con un IDE (Entornos de Desarrollo Integrados).</li>
<li>Ejemplos: Eclipse.</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org6dd6dde" class="outline-6">
<h6 id="org6dd6dde">Segun el metodo de distribucion</h6>
<div class="outline-text-6" id="text-org6dd6dde">
</div>
<div id="outline-container-org7f435ed" class="outline-7">
<h7 id="org7f435ed">Shareware</h7>
<div class="outline-text-7" id="text-org7f435ed">
<ul class="org-ul">
<li>El usuario evalua el producto el producto por tiempo determinado.</li>
<li>Adquirir su licencia -&gt; $ | Precio cero</li>
<li>Ejemplo: Winrar</li>
</ul>
</div>
</div>

<div id="outline-container-org2c8d336" class="outline-7">
<h7 id="org2c8d336">Freeware</h7>
<div class="outline-text-7" id="text-org2c8d336">
<ul class="org-ul">
<li>Se distribuye sin $.</li>
<li>Incluye una licencia:</li>
<li>Permite su redistrubacion.</li>
<li>Restricciones: vender, modificar.</li>
<li>No es software de libre distribucion.</li>
</ul>
</div>
</div>

<div id="outline-container-org3ccc91e" class="outline-7">
<h7 id="org3ccc91e">Adware</h7>
<div class="outline-text-7" id="text-org3ccc91e">
<ul class="org-ul">
<li>Shareware + se descarga automaticamente + publicidad.</li>
<li>Al comprar la licencia -&gt; desaparece la publicidad.</li>
</ul>
</div>
</div>

<div id="outline-container-orge756130" class="outline-7">
<h7 id="orge756130">Multimedia</h7>
<div class="outline-text-7" id="text-orge756130">
<ul class="org-ul">
<li>Integra textos, graficos, sonidos, animaciones.</li>
<li>En distintos ambitos como el educativo.</li>
</ul>
</div>
</div>

<div id="outline-container-org07b6c28" class="outline-7">
<h7 id="org07b6c28">De uso especifico</h7>
<div class="outline-text-7" id="text-org07b6c28">
<ul class="org-ul">
<li>Resuelven un problema concreto.</li>
<li>Ejemplo: bancos, educacion, &#x2026;</li>
</ul>
</div>
</div>
</div>
</div>

<div id="outline-container-org5e4bf97" class="outline-5">
<h5 id="org5e4bf97">Licencias</h5>
<div class="outline-text-5" id="text-org5e4bf97">
<ul class="org-ul">
<li>Licencia = contrato (desarrollador del SW, usuario).</li>
</ul>
</div>

<div id="outline-container-org02caec1" class="outline-6">
<h6 id="org02caec1">SW Libre</h6>
<div class="outline-text-6" id="text-org02caec1">
<ul class="org-ul">
<li>Utilizado con cualquier fin.</li>
<li>Podemos estudiar su funcionamiento y modificarlo.</li>
<li>Distribuir copias.</li>
<li>Mejoras -&gt; hacerlas publicas -&gt; distribuir al publico.</li>
</ul>
</div>
</div>

<div id="outline-container-org91544ca" class="outline-6">
<h6 id="org91544ca">SW Propietario</h6>
<div class="outline-text-6" id="text-org91544ca">
<ul class="org-ul">
<li>El codigo fuente no es accesible.</li>
<li>Su licencia prohibe 1 o varias posibilidades:
<ul class="org-ul">
<li>Redistribucion.</li>
<li>Copia.</li>
<li>Uso en varias maquinas.</li>
<li>Transferencias de titularidad.</li>
<li>Difusion de fallos y errores.</li>
<li>Variantes: Freeware y Shareware.</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-org888f3cc" class="outline-6">
<h6 id="org888f3cc">SW de dominio publico</h6>
<div class="outline-text-6" id="text-org888f3cc">
<ul class="org-ul">
<li>So desconoce su autor o fin de la propiedad de autor.</li>
</ul>
</div>
</div>

<div id="outline-container-org9d52613" class="outline-6">
<h6 id="org9d52613">GPL</h6>
<div class="outline-text-6" id="text-org9d52613">
<ul class="org-ul">
<li>Licencia mas utilizada.</li>
<li>SW Libre + fuente abierta.</li>
<li>Derecho a: usar, modificar haciendo publicas.</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org6a41c6a" class="outline-5">
<h5 id="org6a41c6a">Tipos</h5>
<div class="outline-text-5" id="text-org6a41c6a">
</div>
<div id="outline-container-org6fb5fe3" class="outline-6">
<h6 id="org6fb5fe3">A medida</h6>
<div class="outline-text-6" id="text-org6fb5fe3">
<ul class="org-ul">
<li>Adaptado a los requeremientos de la empresa u organizacion.</li>
<li>Se desarrollo en funcion de las necesidades, actividad y
forma de trabajar.</li>
<li>No suele ser compatible con empresas del sector.</li>
<li>Es mas costoso, ya que va dirigido a un solo cliente.</li>
<li>Necesito tiempo de desarrollo.</li>
</ul>
</div>
</div>

<div id="outline-container-orgcb18fff" class="outline-6">
<h6 id="orgcb18fff">Estandar o Enlatados</h6>
<div class="outline-text-6" id="text-orgcb18fff">
<ul class="org-ul">
<li>Es software generico.</li>
<li>Resuelve multiples necesidades.</li>
<li>Puede parametrizarse o adaptarse a las necesiades -&gt;
herramientas de configuracion.</li>
<li>Pueden faltarse funciones -&gt; se complementa con otras
herramientas.</li>
<li>Ya esta hecho.</li>
<li>Menor numero de errores -&gt; comprobado por varios clientes.</li>
<li>Suele ser mas barato.</li>
<li>Pueden tener funciones que no usamos.</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org578dc2f" class="outline-5">
<h5 id="org578dc2f">Ciclos de vida</h5>
<div class="outline-text-5" id="text-org578dc2f">
<ul class="org-ul">
<li>Son las fases o etapas en las que se desarrolla el software.</li>
</ul>
</div>

<div id="outline-container-org244158c" class="outline-6">
<h6 id="org244158c">Cascada</h6>
<div class="outline-text-6" id="text-org244158c">
<ul class="org-ul">
<li>Entrega el documento completo.</li>
<li>Solo en el mantenimiento se vuelve a etapas anteriores
(codificacion -&gt; pruebas).</li>
<li>Con realimentacion:
<ul class="org-ul">
<li>Cuando debido a un fallo, ambiguedades, etc &#x2026; se vuelve
a etapas anteriores.</li>
</ul></li>
<li>Ventajas, inconvenientes. Cuando se recomienda.</li>
</ul>
</div>
</div>

<div id="outline-container-org1d09754" class="outline-6">
<h6 id="org1d09754">Evolutivos</h6>
<div class="outline-text-6" id="text-org1d09754">
<ul class="org-ul">
<li>Los requisitos del usuario y del producto cambian cuando se
desarrolla.</li>
<li>Surgen versiones distintas.</li>
</ul>
</div>

<div id="outline-container-org7bfb964" class="outline-7">
<h7 id="org7bfb964">Iterativo incremental</h7>
<div class="outline-text-7" id="text-org7bfb964">
<ul class="org-ul">
<li>Basado en cascada.</li>
<li>El SW se entrega en partes pequeñas -&gt; incrementos.</li>
<li>Los incrementos son reutilizables.</li>
<li>Ej: procesador de textos.
<ul class="org-ul">
<li>Primero se desarrollan las funciones basicas como las de
edicion.</li>
<li>En cada incremento se desarrollarian nuevas funciones como
la gramatica u ortografia.</li>
<li>En el siguiente, funciones avanzadas de paginacion.</li>
<li>&#x2026;</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-orgd56a0b3" class="outline-7">
<h7 id="orgd56a0b3">En espiral</h7>
<div class="outline-text-7" id="text-orgd56a0b3">
<ul class="org-ul">
<li>Mezcla el modelo en Cascada y el iterativo de construccion
de prototipos.</li>
<li>Cada ciclo -&gt; se divide en 4 fases.</li>
<li>Es similar al iterativo incremental, pero este si analiza
riesgos.</li>
<li>Fases:
<ul class="org-ul">
<li>Determinar objetivos, alternativas, restricciones, &#x2026;</li>
<li>Analisis de riesgos: identificar los riesgos, como
resolverlos, &#x2026;</li>
<li>Desarrollar y probar.</li>
<li>Planificacion: se revisa lo hecho, si se continua, se
planifican las fases del ciclo siguiente.</li>
</ul></li>
<li>Muy utilizado para sistemas orientados a objetos.</li>
</ul>
</div>
</div>
</div>
</div>
</div>

<div id="outline-container-org967bb94" class="outline-4">
<h4 id="org967bb94">Programa</h4>
<div class="outline-text-4" id="text-org967bb94">
<ul class="org-ul">
<li>Es una serie de ordenes o instrucciones.</li>
<li>Siguen un orden o secuencia para cumplir una finalidad determinado.</li>
<li>Ejemplo: Holamundo.c</li>
</ul>
</div>
</div>

<div id="outline-container-org8e892cb" class="outline-4">
<h4 id="org8e892cb">Aplicacion</h4>
<div class="outline-text-4" id="text-org8e892cb">
<ul class="org-ul">
<li>Puede estar formada por uno o varios programas.</li>
<li>Esta en contacto con el usuario, no con el hardware.</li>
<li>Ejemplo: BB.DD., procesadores do texto, hojas de calculo, correo electronico.</li>
<li>Finalizar: automatizar o ayudar a realizar tareas.</li>
</ul>
</div>
</div>

<div id="outline-container-orgafdab79" class="outline-4">
<h4 id="orgafdab79">Suite o Paquete Integrado</h4>
<div class="outline-text-4" id="text-orgafdab79">
<ul class="org-ul">
<li>Es el conjunto de programas que se ejecutan unos
independientes del otro.</li>
<li>Ejemplo: Microsoft Office, Libre Office, Open Office.</li>
<li>Suelen compartir elementos comunes como librerias, datos. etc.</li>
<li>Son compatibles entre ellos.</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-orgb7a44cd" class="outline-3">
<h3 id="orgb7a44cd">Lenguajes de programacion</h3>
<div class="outline-text-3" id="text-orgb7a44cd">
<ul class="org-ul">
<li>Los programas son conjuntos de instrucciones que se desarrollan
utilizando un lenguaje de programacion.</li>
<li>Es legible por el usuario (programador).</li>
<li>Es ininteligible para el ordenador.</li>
<li>Necesita de un proceso de traduccion: lenguaje -&gt; hardware</li>
</ul>
</div>

<div id="outline-container-org9fc94f4" class="outline-4">
<h4 id="org9fc94f4">Componentes</h4>
<div class="outline-text-4" id="text-org9fc94f4">
<ul class="org-ul">
<li>Caracteres: Vocabulario o lexico -&gt; simbolos permitidos.</li>
<li>Sintaxis: Son las reglas que combinan los caracteres -&gt;
construcciones con los simbolos.</li>
<li>Semantica: son las reglas que definen los efectos de cualquier
construccion.</li>
<li>Palabras reservadas.</li>
</ul>
</div>
</div>

<div id="outline-container-org0f293e1" class="outline-4">
<h4 id="org0f293e1">Criterios para establecer las clasificaciones</h4>
<div class="outline-text-4" id="text-org0f293e1">
</div>
<div id="outline-container-org50ee4ca" class="outline-5">
<h5 id="org50ee4ca">Segun el nivel de abstraccion</h5>
<div class="outline-text-5" id="text-org50ee4ca">
</div>
<div id="outline-container-orge2052a1" class="outline-6">
<h6 id="orge2052a1">Lenguaje de bajo nivel</h6>
<div class="outline-text-6" id="text-orge2052a1">
<ul class="org-ul">
<li>Son instrucciones complejas e ininteligibles -&gt; secuencias
de 0's y 1's.</li>
<li>Es entendible por el ordenador (hardware).</li>
<li>Es dependiente del hardware del ordenador (procesador,
memoria, &#x2026;).</li>
<li>No son portables entre distinto hardware (clonico, Apple,
etc.).</li>
<li>Trabaja con los registros de Memoria Fisica.</li>
</ul>
</div>
</div>

<div id="outline-container-orgccc372e" class="outline-6">
<h6 id="orgccc372e">Lenguaje de Medio Nivel o Ensamblador</h6>
<div class="outline-text-6" id="text-orgccc372e">
<ul class="org-ul">
<li>Esta cercano al Hardware.</li>
<li>Surge por la poce portabilidad del L. Maquina.</li>
<li>Usa mnemotecnicos -&gt; Mas legible por el usuario.</li>
<li>Se trabaja con los registros del procesador y direcciones
fisicas.</li>
<li>No es facil de programar.</li>
<li>El programador ademas de conocer el lenguaje ha de conocer
el HW.</li>
<li>Para hacerlo legible al ordenador:
<ul class="org-ul">
<li>Se compila.</li>
<li>Se traduce al lenguaje maquina.</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-orgb69ee88" class="outline-6">
<h6 id="orgb69ee88">Lenguaje de Alto Nivel</h6>
<div class="outline-text-6" id="text-orgb69ee88">
<ul class="org-ul">
<li>Son la mayoria de los lenguajes actuales.</li>
<li>Mas cercano al lenguaje humano, son mas intuitivos.</li>
<li>Se ayudan de librerias y funciones.</li>
<li>Para ejecutarse necesitan de un traductor (interprete o
compilador).</li>
<li>Son independientes de la maquina.</li>
<li>Ejemplo: C++, Cobol, PHP, Java, &#x2026;</li>
<li>Pueden ofrecer un framework (entorno de trabajo o
desarrollo):
<ul class="org-ul">
<li>La programacion es mas eficiente y rapida.</li>
<li>Formado por un conjunto de elementos personalizables y
adaptables a las necesidades de la aplicacion.</li>
<li>Ejemplo: bootstrap.
<ul class="org-ul">
<li>Utilizado en twitter.</li>
<li>Cualquiera puede realizar paginas y aplicaciones web.</li>
</ul></li>
</ul></li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org7ba14a2" class="outline-5">
<h5 id="org7ba14a2">Segun la forma de ejecucion</h5>
<div class="outline-text-5" id="text-org7ba14a2">
</div>
<div id="outline-container-orgb6b5df0" class="outline-6">
<h6 id="orgb6b5df0">Compilados</h6>
<div class="outline-text-6" id="text-orgb6b5df0">
<ul class="org-ul">
<li>Necesitan de un traductor o compilador.</li>
<li>Convierten de codigo fuente a codigo maquina.</li>
<li>Mas rapidos que los interpretes o virtuales.</li>
<li>Si se producen errores hay que modificar y volver a compilar.</li>
<li>Utilizando un enlazador o linker:
<ul class="org-ul">
<li>Union (codigo objeto programa; codigo objeto de las
librerias).</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-org6fc950e" class="outline-6">
<h6 id="org6fc950e">Interpretados</h6>
<div class="outline-text-6" id="text-org6fc950e">
<ul class="org-ul">
<li>Se carga en Memoria el interprete.</li>
<li>Lee las instrucciones + las interpreta + las ejecuta.</li>
<li>Es mas lento.</li>
<li>No requiere volver a compilar ante un error.</li>
<li>Ejemplo: Java -&gt; combina compilacion e interpretacion</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org0860397" class="outline-5">
<h5 id="org0860397">Paradigma de programacion</h5>
<div class="outline-text-5" id="text-org0860397">
<ul class="org-ul">
<li>Paradigma = enfoque particular para construir el SW -&gt; reglas,</li>
</ul>
<p>
patrones, estilos de programacion, &#x2026;
</p>
<ul class="org-ul">
<li>Un lenguaje de programacion puede usar mas de un paradigma -&gt;</li>
</ul>
<p>
se usa el que interesa.
</p>
</div>

<div id="outline-container-orgd812757" class="outline-6">
<h6 id="orgd812757">Categorias</h6>
<div class="outline-text-6" id="text-orgd812757">
</div>
<div id="outline-container-orgd83d4b6" class="outline-7">
<h7 id="orgd83d4b6">Imperativos</h7>
<div class="outline-text-7" id="text-orgd83d4b6">
<ul class="org-ul">
<li>Instrucciones simples.</li>
<li>Detallan como se manipula la informacion de la memoria.</li>
<li>Sentencia principal -&gt; la asignacion.</li>
<li>Ejemplo: Basic, Java, Fortran, C++.</li>
<li>Engloba: programacion estructurada, modular y la POO.</li>
</ul>
</div>
</div>

<div id="outline-container-orge20ef7e" class="outline-7">
<h7 id="orge20ef7e">Funcionales</h7>
<div class="outline-text-7" id="text-orge20ef7e">
<ul class="org-ul">
<li>Se basan en el concepto de funcion y los argumentos a
aplicar.</li>
<li>Ejemplo: Lisp, Schema, ML.</li>
</ul>
</div>
</div>

<div id="outline-container-orgf362ec1" class="outline-7">
<h7 id="orgf362ec1">Logicos</h7>
<div class="outline-text-7" id="text-orgf362ec1">
<ul class="org-ul">
<li>Los podemos ver como una BB.DD. de declaraciones logicas
-&gt; reglas.</li>
<li>Ejecucion: consiste en preguntar (BB.DD.) de forma
interactiva.</li>
<li>Ej: Prolog -&gt; sistemas expertos, prospecciones.</li>
</ul>
</div>
</div>

<div id="outline-container-org7b9e7eb" class="outline-7">
<h7 id="org7b9e7eb">Estructurados</h7>
<div class="outline-text-7" id="text-org7b9e7eb">
<ul class="org-ul">
<li>Utilizan 3 construcciones logicas -&gt; secuencial,
condicional y repetitiva.</li>
<li>De lectura y seguimiento facil.</li>
<li>Si es grande su lectura y manejo se complica.</li>
<li>Se puede dividir en partes manejables o modulos (con sus
inputs y outputs).
<ul class="org-ul">
<li>Son independientes.</li>
<li>Hay uno raiz que controla al resto.</li>
<li>Permite un desarrollo mas rapido.</li>
<li>Es reutilizable.</li>
<li>Ej. Pascal, Fortran, C, Modula-2.</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-org917f6b2" class="outline-7">
<h7 id="org917f6b2">Orientados a objetos</h7>
<div class="outline-text-7" id="text-org917f6b2">
<ul class="org-ul">
<li>Un programa es visto como un conjunto de objetos.</li>
<li>Objeto:
<ul class="org-ul">
<li>Es una estructura de datos + metodo u operaciones
(comportamiento) que los manipulan.</li>
<li>Los datos son propiedades o atributos de los objetos.</li>
<li>Los metodos son propiedades o atributos.</li>
<li>La comunicacion se lleva a cabo mediante paso de mensajes.</li>
</ul></li>
<li>Clase:
<ul class="org-ul">
<li>Es una plantilla para crear objetos -&gt; instaciacion.</li>
<li>Ejemplo: Java</li>
<li>Se asemeja a un modulo (programacion estructurada).</li>
</ul></li>
<li>Permite reutilizar codigo, trabajar en equipo y
mantenimiento del software.</li>
<li>Su programacion no es tan intuitiva.</li>
<li>Ej.: C++, Java, Smaltalk.</li>
</ul>
</div>
</div>
</div>
</div>
</div>

<div id="outline-container-org5ff8f80" class="outline-4">
<h4 id="org5ff8f80">Obtener codigo ejecutable</h4>
<div class="outline-text-4" id="text-org5ff8f80">
<ul class="org-ul">
<li>Diseño:
<ul class="org-ul">
<li>Componente SW &lt;-&gt; nivel de detalle.</li>
<li>Herramientas: {Pseudocodigo | DFD}</li>
<li>Se codifica con un lenguaje de programacion.</li>
</ul></li>
<li>Codificacion: se genera el codigo fuente.</li>
</ul>
</div>

<div id="outline-container-org98adb4f" class="outline-5">
<h5 id="org98adb4f">Tipos de codigo</h5>
<div class="outline-text-5" id="text-org98adb4f">
</div>
<div id="outline-container-org05528ad" class="outline-6">
<h6 id="org05528ad">Fuente</h6>
<div class="outline-text-6" id="text-org05528ad">
<ul class="org-ul">
<li>Escrito por el programador.</li>
<li>En lenguaje de alto nivel.</li>
<li>Mediante editor de texto o herramienta de programacion.</li>
<li>Se parte de lo pseudocodigos o DFD.</li>
<li>No se ejecute por el ordenador.</li>
</ul>
</div>
</div>

<div id="outline-container-org1bd0680" class="outline-6">
<h6 id="org1bd0680">Objeto</h6>
<div class="outline-text-6" id="text-org1bd0680">
<ul class="org-ul">
<li>Resultado de compilar el codigo fuente.</li>
<li>No se ejecuta en el ordenador.</li>
<li>Ininteligible por el humano.</li>
<li>Representacion a bajo nivel.</li>
</ul>
</div>
</div>

<div id="outline-container-orgec26f98" class="outline-6">
<h6 id="orgec26f98">Ejecutable</h6>
<div class="outline-text-6" id="text-orgec26f98">
<ul class="org-ul">
<li>Resultado de enlazar: codigo objeto + rutinas + librerias.</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org5a51638" class="outline-5">
<h5 id="org5a51638">Compilacion</h5>
<div class="outline-text-5" id="text-org5a51638">
</div>
<div id="outline-container-orgba28de3" class="outline-6">
<h6 id="orgba28de3">Compilador</h6>
<div class="outline-text-6" id="text-orgba28de3">
<ul class="org-ul">
<li>Si existe un error en la compilacion -&gt; no se genera el
codigo objeto -&gt; modificar el codigo fuente + compilar.</li>
<li>Etapas:
<ul class="org-ul">
<li>Analisis lexico.</li>
<li>Analisis sintactico.</li>
<li>Analisis semantico.</li>
<li>Genera codigo intermedio.</li>
<li>Optimizar codigo.</li>
<li>Generar codigo.</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-org55fdd15" class="outline-6">
<h6 id="org55fdd15">Enlazador</h6>
<div class="outline-text-6" id="text-org55fdd15">
<ul class="org-ul">
<li>Inserta en el codigo objeto las funciones de las librerias.</li>
</ul>
</div>
</div>
</div>
</div>
</div>

<div id="outline-container-org4ec1d0e" class="outline-3">
<h3 id="org4ec1d0e">Maquinas Virtuales</h3>
<div class="outline-text-3" id="text-org4ec1d0e">
<ul class="org-ul">
<li>El codigo es un codigo intermedio -&gt; bytecode.</li>
<li>Son mas portables -&gt; sirven para distintas plataformas (Windows,
Linux, Apple, &#x2026;).</li>
<li>El codigo es interpretado por una maquina virtual.</li>
<li>Su ejecucion es lenta.</li>
<li>Son muy versatiles.</li>
<li>Aplicacion SW de un equipo que ejecuta programas como si fuese una
maquina real.</li>
</ul>
</div>

<div id="outline-container-orga8d6c5c" class="outline-4">
<h4 id="orga8d6c5c">Categorias</h4>
<div class="outline-text-4" id="text-orga8d6c5c">
</div>
<div id="outline-container-org9057af5" class="outline-5">
<h5 id="org9057af5">De sistema</h5>
<div class="outline-text-5" id="text-org9057af5">
<ul class="org-ul">
<li>Ejecuta en la misma fisica distintas maquinas virtuales con
distintos sistemas operativos.</li>
<li>Ej: VMWare, VBox</li>
</ul>
</div>
</div>

<div id="outline-container-org71b6131" class="outline-5">
<h5 id="org71b6131">De proceso o de aplicacion</h5>
<div class="outline-text-5" id="text-org71b6131">
<ul class="org-ul">
<li>La VM se ejecuta como un proceso en el SS.OO.</li>
<li>Objetivo: proporcionar un entorno de ejecucion con
independiencia del HW y el OS.</li>
<li>Permite que un programa se ejecute de distinta manera en
distinta plataforma.</li>
<li>Ejemplo: VM Java</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org28bc308" class="outline-4">
<h4 id="org28bc308">La maquina virtual de Java</h4>
<div class="outline-text-4" id="text-org28bc308">
<ul class="org-ul">
<li>Programa compilador Java -&gt; se ejecuta en distintos entornos.</li>
<li>El codigo generado por el compilador -&gt; lo ejecuta la JVM, no el
procesador.</li>
<li>Dibujo.</li>
</ul>
</div>

<div id="outline-container-orgda01bdf" class="outline-5">
<h5 id="orgda01bdf">Tareas o funciones</h5>
<div class="outline-text-5" id="text-orgda01bdf">
<ul class="org-ul">
<li>Reservar / Liberar memoria para los objetos.</li>
<li>Comunicarse con el HW.</li>
<li>Comprobar el cumplimiento de las normas de seguridad de
aplicaciones Java.</li>
<li>Inconvenientes:
<ul class="org-ul">
<li>Ejecucion mas lenta.</li>
</ul></li>
<li>Descargar e instalar el JRE.</li>
</ul>
</div>
</div>
</div>
</div>

<div id="outline-container-org62e7eff" class="outline-3">
<h3 id="org62e7eff">Lenguajes mas difundidos. Caracteristicas.</h3>
<div class="outline-text-3" id="text-org62e7eff">
</div>
<div id="outline-container-org297c5f6" class="outline-4">
<h4 id="org297c5f6">Java</h4>
<div class="outline-text-4" id="text-org297c5f6">
<ul class="org-ul">
<li>Evolucion de C++ -&gt; lo simplifica.</li>
<li>LOO (Lenguaje Orientado a Objetos).</li>
<li>Capaz de trabajar con redes y protocolos (IP, HTTP, FTP, &#x2026;).</li>
<li>Lenguaje Virtual Interpretado.</li>
<li>Portable.</li>
<li>Contempla aspectos de seguridad.</li>
<li>Permite ejecucion multihilo.</li>
</ul>
</div>
</div>

<div id="outline-container-orgbc91c03" class="outline-4">
<h4 id="orgbc91c03">Python</h4>
<div class="outline-text-4" id="text-orgbc91c03">
<ul class="org-ul">
<li>De alto nivel pero simple y sencillo</li>
<li>Muy portable.</li>
<li>Interpretado como Java: codigo fuente -&gt; bytecode.</li>
<li>El enlace con las librerias -&gt; Al ejecutar el bytecode.</li>
<li>LOO.</li>
<li>Incrustable en otros lenguajes como C y C++.</li>
</ul>
</div>
</div>

<div id="outline-container-org12f217c" class="outline-4">
<h4 id="org12f217c">C y C++</h4>
<div class="outline-text-4" id="text-org12f217c">
<ul class="org-ul">
<li>Potente, versatil y se sigue utilizando.</li>
<li>Ligado a Unix.</li>
<li>Estructurado y ligado al uso de funciones.</li>
<li>Puede incluir codigo que trabaje a bajo nivel.</li>
<li>Programas eficientes y rapidos.</li>
<li>Tamaño pequeño de los programas.</li>
<li>Portable, aunque puede necesitar modificaciones.</li>
</ul>
</div>
</div>

<div id="outline-container-org414bd29" class="outline-4">
<h4 id="org414bd29">JavaScript</h4>
<div class="outline-text-4" id="text-org414bd29">
<ul class="org-ul">
<li>En programacion web.</li>
<li>Parecido a Java, C, C++.</li>
<li>Se ejecuta en el cliente.</li>
<li>Es seguro y fiable.</li>
<li>Tiene limitaciones de seguridad.</li>
<li>Codigo visible -&gt; podemos leerlo.</li>
<li>Existen muchas librerias basadas en JavaScript como JQuery.</li>
</ul>
</div>
</div>

<div id="outline-container-org78d7972" class="outline-4">
<h4 id="org78d7972">PHP</h4>
<div class="outline-text-4" id="text-org78d7972">
<ul class="org-ul">
<li>Multiplataforma.</li>
<li>Para desarrollar webs dinamicas.</li>
<li>Buena integracion con MySQL.</li>
<li>Puede usar tecnicas de POO (Programacion Orientada a Objetos).</li>
<li>Interpretado en la parte del servidor.</li>
<li>En backend de CMS (Pretashop, Wordpress, &#x2026;).</li>
</ul>
</div>
</div>

<div id="outline-container-org9998ba0" class="outline-4">
<h4 id="org9998ba0">VB.NET</h4>
<div class="outline-text-4" id="text-org9998ba0">
<ul class="org-ul">
<li>Evolucion de Visual Basic.</li>
<li>LOO.</li>
<li>Herramientas para programarlo.
<ul class="org-ul">
<li>Microsoft Visual Estudio.</li>
<li>Sharp Develop -&gt; Libre, menos potente.</li>
</ul></li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org1d71f43" class="outline-3">
<h3 id="org1d71f43">Desarrollo de una aplicacion</h3>
<div class="outline-text-3" id="text-org1d71f43">
<ul class="org-ul">
<li>Existen distintos paradigmas.</li>
</ul>
</div>

<div id="outline-container-orgc338100" class="outline-4">
<h4 id="orgc338100">Fases</h4>
<div class="outline-text-4" id="text-orgc338100">
</div>
<div id="outline-container-org9598209" class="outline-5">
<h5 id="org9598209">Inicial</h5>
<div class="outline-text-5" id="text-org9598209">
<ul class="org-ul">
<li>Planificacion, Estimaciones y Rentabilidad del proyecto.</li>
<li>Simil: construccion de un edificio: licencia, coste,
trabajadores, tiempo, &#x2026;</li>
<li>Gente experimentada en:
<ul class="org-ul">
<li>Elaboracion del proyecto.</li>
<li>Plataforma de construccion.</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-orgc46413b" class="outline-5">
<h5 id="orgc46413b">Analisis</h5>
<div class="outline-text-5" id="text-orgc46413b">
<ul class="org-ul">
<li>Se recopilan, examinan y formulan los requisitos del cliente.</li>
<li>Se analizan posibles restricciones.</li>
<li>Se documentan y registran las entrevistas con el cliente.</li>
<li>El cliente se compromete a no variar nada hasta la 1a release.</li>
<li>El exito del proyecto esta en funcion de comprender y entender
lo que quiere el cliente para darle una solucion lo mas
acertada posible.</li>
<li>No es facil, ya que los requisitos no quedan claros, surgen
nuevos, etc.</li>
<li>Importante: comunicacion cliente-desarrollador.</li>
</ul>
</div>

<div id="outline-container-orgf925a8b" class="outline-6">
<h6 id="orgf925a8b">Tecnicas utilizadas</h6>
<div class="outline-text-6" id="text-orgf925a8b">
<ul class="org-ul">
<li>Entrevistas.</li>
<li>Desarrollo conjunto de aplicaciones, donde cada persona
juega un rol.</li>
<li>Planificacion conjunta de requisitos.</li>
<li>Brainstorming.</li>
<li>Prototipos.</li>
<li>Casos de Uso: UML (Lenguaje Unificado de Marcas) -&gt;
escenarios, comportamientos -&gt; requisitos funcionales.</li>
</ul>
</div>
</div>

<div id="outline-container-orgef1a74e" class="outline-6">
<h6 id="orgef1a74e">Tipos de requisitos</h6>
<div class="outline-text-6" id="text-orgef1a74e">
<ul class="org-ul">
<li>Funcionales: Comportamiento del sistema ante determinados
inputs.</li>
<li><p>
No Funcionales: sobre caracteristicas del sistema:
fiabilidad, plataforma, HW, &#x2026;
</p>
<table>


<colgroup>
<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Funcionales</th>
<th scope="col" class="org-left">No Funcionales</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">El usuario puede agregar</td>
<td class="org-left">La aplicacion debe funcionar en</td>
</tr>

<tr>
<td class="org-left">un nuevo contacto</td>
<td class="org-left">SS.OO. Linux y Windows</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">El usuario puede ver una</td>
<td class="org-left">El tiempo de respuesta a consultas,</td>
</tr>

<tr>
<td class="org-left">lista con todos los contactos</td>
<td class="org-left">altas, bajas y modificaciones ha de</td>
</tr>

<tr>
<td class="org-left">&#xa0;</td>
<td class="org-left">ser inferior a 5 segundos</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">A partir de la lista de contactos</td>
<td class="org-left">Utilizar un sistema gestor de bases</td>
</tr>

<tr>
<td class="org-left">el usuario puede acceder a un contacto</td>
<td class="org-left">de datos</td>
</tr>
</tbody>
</table></li>
</ul>
</div>
</div>

<div id="outline-container-orgc96f2c4" class="outline-6">
<h6 id="orgc96f2c4">Representacion de requisitos</h6>
<div class="outline-text-6" id="text-orgc96f2c4">
</div>
<div id="outline-container-org0e6f110" class="outline-7">
<h7 id="org0e6f110">DFD (Diagrama De Flujo de Datos)</h7>
<div class="outline-text-7" id="text-org0e6f110">
<ul class="org-ul">
<li>Procesos -&gt; Funciones</li>
<li>Entidades externas: no pertenecen al sistema y proporciona
datos o se reciben de el.</li>
<li>Almacenes: almacena los datos procesados.</li>
<li>Flujo de datos.</li>
</ul>
</div>
</div>

<div id="outline-container-org604af99" class="outline-7">
<h7 id="org604af99">DFC (Diagrama de Flujo de Control)</h7>
<div class="outline-text-7" id="text-org604af99">
<ul class="org-ul">
<li>Muestra el flujo de control, no de Estados.</li>
</ul>
</div>
</div>

<div id="outline-container-org57f5d45" class="outline-7">
<h7 id="org57f5d45">DTE (Diagrama de Transicion de Estados)</h7>
<div class="outline-text-7" id="text-org57f5d45">
<ul class="org-ul">
<li>Comportamiento del sistema en funcion de los sucesos externos.</li>
</ul>
</div>
</div>

<div id="outline-container-org81f97d2" class="outline-7">
<h7 id="org81f97d2">DER (Diagrama Entidad Relacion)</h7>
<div class="outline-text-7" id="text-org81f97d2">
<ul class="org-ul">
<li>Representa los datos y como se relacionan entre ellos.</li>
<li>Entidades.</li>
<li>Relaciones.</li>
</ul>
</div>
</div>

<div id="outline-container-org8f27366" class="outline-7">
<h7 id="org8f27366">DD (Diccionario de Datos)</h7>
<div class="outline-text-7" id="text-org8f27366">
<ul class="org-ul">
<li>Describe detalladamente los datos (flujo, almacenes) del
DFD.</li>
</ul>
</div>
</div>

<div id="outline-container-orga30262a" class="outline-7">
<h7 id="orga30262a">Documento Generado</h7>
<div class="outline-text-7" id="text-orga30262a">
<ul class="org-ul">
<li>Especificacion de Requisiton del SW.</li>
<li>Estructura: IEEE 830.</li>
</ul>
</div>
</div>
</div>
</div>

<div id="outline-container-org6915210" class="outline-5">
<h5 id="org6915210">Diseño</h5>
<div class="outline-text-5" id="text-org6915210">
<ul class="org-ul">
<li>Composicion sobre la solucion al problema.</li>
<li>Requisitos -&gt; representacion del SW.</li>
<li>Se realizan 2 documentos por los analistas, supervisado por el
jefe del proyecto.
<ul class="org-ul">
<li>Se determinan los requisitos generales de la arquitectura de
la aplicacion.</li>
<li>Se define con precision cada subconjunto de la aplcacion.</li>
</ul></li>
</ul>
</div>

<div id="outline-container-org50d2a28" class="outline-6">
<h6 id="org50d2a28">Estructurado: flujo de datos sobre el sistema.</h6>
<div class="outline-text-6" id="text-org50d2a28">
</div>
<div id="outline-container-orgb8b22ed" class="outline-7">
<h7 id="orgb8b22ed">Diseño de datos</h7>
<div class="outline-text-7" id="text-orgb8b22ed">
<ul class="org-ul">
<li>Son las estructuras de datos necesarias para implementar
el software.</li>
<li>Se basan en el diagrama E/R y la descripcion detallada
de los datos.</li>
</ul>
</div>
</div>

<div id="outline-container-orgf062af0" class="outline-7">
<h7 id="orgf062af0">Diseño arquitectonico</h7>
<div class="outline-text-7" id="text-orgf062af0">
<ul class="org-ul">
<li>Se centra en la representacion de la estructura de los
componentes del SW, sus propiedades e interacciones.</li>
<li>Un componente del SW puede ser desde un modulo de
programa, una BB.DD., conectores que permitan la
comunicacion, etc.</li>
<li>Se parte del DFD para establecer la estructura modular
del SW a desarrollar.</li>
</ul>
</div>
</div>

<div id="outline-container-orge66d615" class="outline-7">
<h7 id="orge66d615">Diseño de la interfaz</h7>
<div class="outline-text-7" id="text-orge66d615">
<ul class="org-ul">
<li>Describe la comunicacion entre (SW, Personas, Otros
sistemas).</li>
<li>El resultado -&gt; Creacion de formatos de pantalla.</li>
</ul>
</div>
</div>

<div id="outline-container-org988bc1d" class="outline-7">
<h7 id="org988bc1d">Diseño a nivel de componentes</h7>
<div class="outline-text-7" id="text-org988bc1d">
<ul class="org-ul">
<li>Transforma: elementos estructurales (arquitectura) en
una descripcion procedimental -&gt; diseño de componentes
SW.</li>
<li>El nivel de detalle de cada componente del software se
debe poder codificar mediante un lenguaje de
programacion.</li>
<li>Sus fundamentos se basan en distintas representaciones
graficas utilizando notaciones como:
<ul class="org-ul">
<li>Diagramas de flujo.</li>
<li>Diagramas de cajas.</li>
<li>Tablas de decision.</li>
<li>Pseudocodigo.</li>
</ul></li>
<li>Construcciones logicas para formar un programa -&gt;
programacion estructurada:
<ul class="org-ul">
<li>Secuencial</li>
<li>Condicional</li>
<li>Seleccion Multiple</li>
<li>Repetitiva</li>
</ul></li>
</ul>
</div>
</div>
</div>

<div id="outline-container-orged27f0f" class="outline-6">
<h6 id="orged27f0f">O.O.: objetos, propiedades, comportamiento, eventos, estado.</h6>
<div class="outline-text-6" id="text-orged27f0f">
<ul class="org-ul">
<li>Es dificil.</li>
<li>Parte de un Analisis O.O.</li>
<li>Etapas:
<ul class="org-ul">
<li>Subsistemas que implementan las pricipales funciones del
sistema.</li>
<li>Clases y Objetos:
<ul class="org-ul">
<li>Arquitectura de objetos global.</li>
<li>Jerarquia de clases.</li>
</ul></li>
<li>Mensajes: colaboracion entre Objetos.</li>
</ul></li>
<li>UML:
<ul class="org-ul">
<li>Diagramas para expresar modelos.</li>
<li>Estandar de facto.</li>
</ul></li>
</ul>
</div>
</div>
</div>

<div id="outline-container-orge033fb3" class="outline-5">
<h5 id="orge033fb3">Codificacion o Implementacion</h5>
<div class="outline-text-5" id="text-orge033fb3">
<ul class="org-ul">
<li>Implementa el software mediante un lenguaje de programacion.</li>
<li>Documentacion detallada que contiene el codigo (E/, S/,
revision, &#x2026;)</li>
<li>Mucho codigo se suele comentar en el mismo programa.</li>
<li>Importancia:
<ul class="org-ul">
<li>Puede mantenerse por la misma u otra persona.</li>
<li>La que lo mantenga ha de saber que hace cada parte y como lo
hace.</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-org1e8fce0" class="outline-5">
<h5 id="org1e8fce0">Pruebas</h5>
<div class="outline-text-5" id="text-org1e8fce0">
<ul class="org-ul">
<li>Garantizan que cumple las especificaciones del cliente.</li>
<li>Los mismos programas se integran bien y esta listo para la
explotacion.</li>
<li>Documentos y pruebas (Con el cliente presente, opcional):
<ul class="org-ul">
<li>Se ve si cumple con las funciones acordadas en los
documentos.</li>
<li>Se detallan:
<ul class="org-ul">
<li>Los fallos.</li>
<li>Las modificaciones.</li>
</ul></li>
</ul></li>
<li>Estructurales:
<ul class="org-ul">
<li>Pruebas tecnicas (sin clientes).</li>
<li>Cargas reales, estres del sistema y de la aplicacion.</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-org4009d6f" class="outline-5">
<h5 id="org4009d6f">Explotacion</h5>
<div class="outline-text-5" id="text-org4009d6f">
<ul class="org-ul">
<li>Instalacion del software en el entorno real.</li>
<li>Se trabaja con el de forma normal.</li>
<li>Fase mas larga: incidencias, nuevas necesidades, etc.</li>
<li>Documentacion:
<ul class="org-ul">
<li>Errores o fallos concretos.</li>
<li>Los analistas y programadores los revisan y solucionan.</li>
<li>Otras necesidades -&gt; en Mantenimiento</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-orgbcd1284" class="outline-5">
<h5 id="orgbcd1284">Mantenimiento</h5>
<div class="outline-text-5" id="text-orgbcd1284">
<ul class="org-ul">
<li>Acciones:
<ul class="org-ul">
<li>Correctivas de fallos.</li>
<li>Actualizaciones -&gt; adaptarlos y evolucionarias.</li>
</ul></li>
<li>Se utiliza la documentacion tecnica.</li>
<li>Todo se documenta: que operacion, que hace, como -&gt; pruebas
distintas para el programador.</li>
<li>TODAS LAS FASES SE VAN SOLAPANDO. CUANDO FINALIZAN, SU
RESULTADO ES LA APLICACION</li>
</ul>
</div>
</div>

<div id="outline-container-org0c3b878" class="outline-5">
<h5 id="org0c3b878">Documentacion</h5>
<div class="outline-text-5" id="text-org0c3b878">
<ul class="org-ul">
<li>Debe ser util y adaptada a los usuarios de dicha
documentacion. Como minimo:
<ul class="org-ul">
<li>Manual de usuario:
<ul class="org-ul">
<li>Para utilizar el programa, manejo, lo que hay que hacer,
lo que no.</li>
<li>Ayuda, explicativo.</li>
</ul></li>
<li>Manual tecnico:
<ul class="org-ul">
<li>Tecnicos que conozcan el lenguaje.</li>
<li>Para que la conozcan como los que la crearon.</li>
</ul></li>
<li>Manual de instalacion:
<ul class="org-ul">
<li>Requisitos necesarios.</li>
<li>Como se instala.</li>
<li>Como so pne en funcionamiento.</li>
</ul></li>
</ul></li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org69c447f" class="outline-4">
<h4 id="org69c447f">Roles en el desarrollo de software</h4>
<div class="outline-text-4" id="text-org69c447f">
</div>
<div id="outline-container-org03d4161" class="outline-5">
<h5 id="org03d4161">Arquitecto del SW</h5>
<div class="outline-text-5" id="text-org03d4161">
<ul class="org-ul">
<li>Decide:
<ul class="org-ul">
<li>Como va a realizarse.</li>
<li>Como se va a cohesionar.</li>
</ul></li>
<li>Con elevado conocimiento de tecnologias, frameworks,
librerias, etc.</li>
<li>Decide la forma y recursos del proyecto.</li>
</ul>
</div>
</div>

<div id="outline-container-org180a7c8" class="outline-5">
<h5 id="org180a7c8">Jefe de Proyecto</h5>
<div class="outline-text-5" id="text-org180a7c8">
<ul class="org-ul">
<li>Dirige el proyecto.</li>
<li>Puede ser un analista experimentado.</li>
<li>Sabiduria en gestinar:
<ul class="org-ul">
<li>Equipos.</li>
<li>Tiempos.</li>
<li>Relacion con clientes.</li>
<li>Etc</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-org5efd2d3" class="outline-5">
<h5 id="org5efd2d3">Analista del sistema</h5>
<div class="outline-text-5" id="text-org5efd2d3">
<ul class="org-ul">
<li>Tiene mucha experiencia.</li>
</ul>
</div>
</div>
</div>
</div>
</div>

<div id="outline-container-org4d5cdb1" class="outline-2">
<h2 id="org4d5cdb1">TEMA 2</h2>
<div class="outline-text-2" id="text-org4d5cdb1">
<ul class="org-ul">
<li>&#x2026;</li>
</ul>
</div>
</div>
</div>
<div id="postamble" class="status">
<p class="author">Autor: Alberto Robles Gomez</p>
<p class="date">Created: 2022-04-01 Fri 18:17</p>
</div>
</body>
</html>
